{"code":"(this[\"webpackJsonpreact-tetris\"]=this[\"webpackJsonpreact-tetris\"]||[]).push([[0],{21:function(n,e,t){},27:function(n,e,t){\"use strict\";t.r(e);var r,o,c,i,a,u,l=t(0),s=t(12),d=t.n(s),f=(t(21),t(2)),b=function(){return Array.from(Array(20),(function(){return new Array(12).fill([0,\"clear\"])}))},p=function(n,e,t){for(var r=t.x,o=t.y,c=0;c<n.tetromino.length;c+=1)for(var i=0;i<n.tetromino[c].length;i+=1)if(0!==n.tetromino[c][i]){console.log(\"new x: \".concat(i+n.pos.x+r,\" new y: \").concat(c+n.pos.y+o));var a=i+n.pos.x+r,u=c+n.pos.y+o;if(!e[u]||!e[u][a]||\"clear\"!==e[u][a][1])return!0}},j={0:{shape:[[0]],color:\"0, 0, 0\"},I:{shape:[[0,\"I\",0,0],[0,\"I\",0,0],[0,\"I\",0,0],[0,\"I\",0,0]],color:\"80, 227, 230\"},J:{shape:[[0,\"J\",0],[0,\"J\",0],[\"J\",\"J\",0]],color:\"36, 95, 223\"},L:{shape:[[0,\"L\",0],[0,\"L\",0],[0,\"L\",\"L\"]],color:\"223, 173, 36\"},O:{shape:[[\"O\",\"O\"],[\"O\",\"O\"]],color:\"223, 217, 36\"},S:{shape:[[0,\"S\",\"S\"],[\"S\",\"S\",0],[0,0,0]],color:\"48, 211, 56\"},T:{shape:[[0,0,0],[\"T\",\"T\",\"T\"],[0,\"T\",0]],color:\"132, 61, 198\"},Z:{shape:[[\"Z\",\"Z\",0],[0,\"Z\",\"Z\"],[0,0,0]],color:\"227, 78, 78\"}},x=function(){var n=\"IJLOSTZ\",e=n[Math.floor(Math.random()*n.length)];return j[e]},O=t(3),h=t(4),g=h.a.div(r||(r=Object(O.a)([\"\\n    width: auto;\\n    background: rgba(\",\", 0.8);\\n    border: \",\";\\n    border-bottom-color: rgba(\",\", 0.1);\\n    border-right-color: rgba(\",\", 1);\\n    border-top-color: rgba(\",\", 1);\\n    border-left-color: rgba(\",\", 0.3);\\n\"])),(function(n){return n.color}),(function(n){return 0===n.type?\"0px solid\":\"4px solid\"}),(function(n){return n.color}),(function(n){return n.color}),(function(n){return n.color}),(function(n){return n.color})),v=t(1),m=function(n){var e=n.type;return Object(v.jsx)(g,{type:e,color:j[e].color})},y=h.a.div(o||(o=Object(O.a)([\"\\n    display: grid;\\n    grid-template-rows: repeat(\\n        \",\",\\n        calc(25vw / \",\")\\n    );\\n    grid-template-columns: repeat(\",\", 1fr);\\n    grid-gap: 1px;\\n    border: 2px solid #333;\\n    width: 100%;\\n    max-width: 25vw;\\n    background: #111;\\n\"])),(function(n){return n.height}),(function(n){return n.width}),(function(n){return n.width})),w=function(n){var e=n.stage;return Object(v.jsx)(y,{width:e[0].length,height:e.length,children:e.map((function(n){return n.map((function(n,e){return Object(v.jsx)(m,{type:n[0]},e)}))}))})},k=h.a.div(c||(c=Object(O.a)([\"\\n    box-sizing: border-box;\\n    display: flex;\\n    align-items: center;\\n    margin: 0 0 20px 0;\\n    padding: 20px;\\n    border: 4px solid #333;\\n    min-height: 30px;\\n    width: 100%;\\n    border-radius: 20px;\\n    color: \",\";\\n    background: #000;\\n    font-family: Pixel, Arial, Helvetica, sans-serif;\\n    font-size: 0.8rem;\\n\"])),(function(n){return n.gameOver?\"red\":\"#999\"})),S=function(n){var e=n.gameOver,t=n.text;return Object(v.jsx)(k,{gameOver:e,children:t})},I=h.a.div(i||(i=Object(O.a)([\"\\n    box-sizing: border-box;\\n    margin: 0 0 20px 0;\\n    padding: 20px;\\n    min-height: 30px;\\n    width: 100%;\\n    border-radius: 20px;\\n    border: none;\\n    color: white;\\n    background: #333;\\n    font-family: Pixel, Arial, Helvetica, sans-serif;\\n    font-size: 1rem;\\n    outline: none;\\n    cursor: pointer;\\n\"]))),C=function(n){var e=n.callback;return Object(v.jsx)(I,{onClick:e,children:\"Start Game\"})},J=t.p+\"static/media/bg.d63cfd51.png\",L=h.a.div(a||(a=Object(O.a)([\"\\n    width: 100vw;\\n    height: 100vh;\\n\\n    background: url(\",\") #000;\\n    background-size: cover;\\n    overflow: hidden;\\n\"])),J),T=h.a.div(u||(u=Object(O.a)([\"\\n    display: flex;\\n    align-items: flex-start;\\n    padding: 40px;\\n    margin: 0 auto;\\n    max-width: 900px;\\n\\n    aside {\\n        width: 100%;\\n        max-width: 200px;\\n        display: block;\\n        padding: 0 20px;\\n    }\\n\"]))),A=t(16),E=t(5),Z=function(n,e){var t=Object(l.useState)(b()),r=Object(f.a)(t,2),o=r[0],c=r[1],i=Object(l.useState)(0),a=Object(f.a)(i,2),u=a[0],s=a[1];return Object(l.useEffect)((function(){s(0);var t=function(t){var r=t.map((function(n){return n.map((function(n){return\"clear\"===n[1]?[0,\"clear\"]:n}))}));return n.tetromino.forEach((function(e,t){e.forEach((function(e,o){0!==e&&(r[t+n.pos.y][o+n.pos.x]=[e,\"\".concat(n.collided?\"merged\":\"clear\")])}))})),n.collided?(e(),function(n){return n.reduce((function(e,t){return-1===t.findIndex((function(n){return 0===n[0]}))?(s((function(n){return n+1})),e.unshift(new Array(n[0].length).fill([0,\"clear\"])),e):(e.push(t),e)}),[])}(r)):r};c((function(n){return t(n)}))}),[n,n.collided]),[o,c,u]};var z=function(n){n.type;var e=Object(l.useState)(null),t=Object(f.a)(e,2),r=t[0],o=t[1],c=Object(l.useState)(!1),i=Object(f.a)(c,2),a=i[0],u=i[1],s=function(){var n=Object(l.useState)({pos:{x:0,y:0},tetromino:j[0].shape,collided:!1}),e=Object(f.a)(n,2),t=e[0],r=e[1],o=Object(l.useCallback)((function(){r({pos:{x:4,y:0},tetromino:x().shape,collided:!1})}),[]);return[t,function(n){var e=n.x,t=n.y,o=n.collided;r((function(n){return Object(E.a)(Object(E.a)({},n),{},{pos:{x:n.pos.x+=e,y:n.pos.y+=t},collided:o})}))},o,function(n,e){var o=Object(E.a)(Object(E.a)({},t),{},{pos:Object(E.a)({},t.pos),tetromino:Object(A.a)(t.tetromino)});o.tetromino=function(n,e){var t=n.map((function(e,t){return n.map((function(n){return n[t]}))}));return e>0?t.map((function(n){return n.reverse()})):t}(o.tetromino,e),o.pos.x;for(var c=1;p(o,n,{x:0,y:0});)if(o.pos.x+=c,(c=-(c+(c>0?1:-1)))>o.tetromino[0].length)return;r(o)}]}(),d=Object(f.a)(s,4),O=d[0],h=d[1],g=d[2],m=d[3],y=Z(O,g),k=Object(f.a)(y,3),I=k[0],J=k[1],z=function(n){var e=Object(l.useState)(0),t=Object(f.a)(e,2),r=t[0],o=t[1],c=Object(l.useState)(0),i=Object(f.a)(c,2),a=i[0],u=i[1],s=Object(l.useState)(0),d=Object(f.a)(s,2),b=d[0],p=d[1],j=[40,100,300,1200],x=Object(l.useCallback)((function(){n>0&&(o((function(e){return e+j[n-1]*(b+1)})),u((function(e){return e+n})))}),[b,j,n]);return Object(l.useEffect)((function(){x()}),[x,n,r]),[r,o,a,u,b,p]}(k[2]),F=Object(f.a)(z,6),P=F[0],G=F[1],B=F[2],D=F[3],H=F[4],K=F[5];console.log(\"re-rendered game\");var M=function(n){p(O,I,{x:n,y:0})||h({x:n,y:0})},N=function(){B>10*(H+1)&&(K((function(n){return n+1})),o(1e3/(H+1)+200)),p(O,I,{x:0,y:1})?(O.pos.y<1&&(console.log(\"Game Over\"),u(!0),o(null)),h({x:0,y:0,collided:!0})):h({x:0,y:1,collided:!1})},R=function(){console.log(\"Interval Off\"),o(null),N()};return function(n,e){var t=Object(l.useRef)();Object(l.useEffect)((function(){t.current=n}),[n]),Object(l.useEffect)((function(){if(null!==e){var n=setInterval((function(){t.current()}),e);return function(){clearInterval(n)}}}),[e])}((function(){N()}),r),Object(v.jsx)(L,{role:\"button\",tabIndex:\"0\",onKeyDown:function(n){return function(n){var e=n.keyCode;a||(37===e?M(-1):39===e?M(1):40===e?R():38===e&&m(I,1))}(n)},onKeyUp:function(n){var e=n.keyCode;a||40===e&&(console.log(\"Interval On\"),o(1e3/(H+1)+200))},children:Object(v.jsxs)(T,{children:[Object(v.jsx)(w,{stage:I}),Object(v.jsxs)(\"aside\",{children:[a?Object(v.jsx)(S,{gameOver:a,text:\"Game Over\"}):Object(v.jsxs)(\"div\",{children:[Object(v.jsx)(S,{text:\"score: \".concat(P)}),Object(v.jsx)(S,{text:\"rows: \".concat(B)}),Object(v.jsx)(S,{text:\"level: \".concat(H)})]}),Object(v.jsx)(C,{callback:function(){J(b()),o(1e3),g(),u(!1),G(0),D(0),K(0)}})]})]})})},F=function(){return Object(v.jsx)(\"div\",{className:\"App\",children:Object(v.jsx)(z,{})})},P=function(n){n&&n instanceof Function&&t.e(3).then(t.bind(null,28)).then((function(e){var t=e.getCLS,r=e.getFID,o=e.getFCP,c=e.getLCP,i=e.getTTFB;t(n),r(n),o(n),c(n),i(n)}))};d.a.render(Object(v.jsx)(F,{}),document.getElementById(\"root\")),P()}},[[27,1,2]]]);","name":"static/js/main.b1d220a7.chunk.js","map":{"version":3,"sources":["static/js/main.b1d220a7.chunk.js"],"names":["this","push","21","module","exports","__webpack_require__","27","__webpack_exports__","r","_templateObject","StyledStage_templateObject","StyledDisplay_templateObject","StyledStartButton_templateObject","StyledTetris_templateObject","_templateObject2","react","react_dom","react_dom_default","n","slicedToArray","createStage","Array","from","fill","checkCollision","player","stage","_ref","moveX","x","moveY","y","tetromino","length","console","log","concat","pos","newX","newY","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","tetrominos","Math","floor","random","taggedTemplateLiteral","styled_components_browser_esm","StyledCell","div","Object","props","type","jsx_runtime","components_Cell","StyledStage","height","width","components_Stage","children","map","row","cell","StyledDisplay","gameOver","components_Display","text","StyledStartButton","components_StartButton","callback","onClick","bg","p","StyledTetrisWrapper","StyledTetris","toConsumableArray","objectSpread2","useStage_useStage","resetPlayer","_useState","_useState2","setStage","_useState3","_useState4","rowsCleared","setRowsCleared","updateStage","prevStage","newStage","forEach","value","collided","reduce","acc","findIndex","prev","unshift","sweepRows","components_Tetris","dropTime","setDropTime","setGameOver","_usePlayer","setPlayer","STAGE_WIDTH","dir","copiedTetromino","matrix","rotatedTetromino","_","index","col","reverse","rotate","offset","usePlayer_usePlayer","_usePlayer2","updatePlayerPos","playerRotate","_useStage","_useStage2","_useGameStatus","score","setScore","rows","setRows","_useState5","_useState6","level","setLevel","linePoints","calcScore","useGameStatus_useGameStatus","_useGameStatus2","movePlayer","drop","dropPlayer","delay","savedCallback","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","_ref2","keyCode","move","onKeyUp","_ref3","src_App","className","src_reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","a","render","document","getElementById"],"mappings":"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"},"input":"(this[\"webpackJsonpreact-tetris\"] = this[\"webpackJsonpreact-tetris\"] || []).push([[0],{\n\n/***/ 21:\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\n\n/***/ }),\n\n/***/ 27:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(0);\n\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(12);\nvar react_dom_default = /*#__PURE__*/__webpack_require__.n(react_dom);\n\n// EXTERNAL MODULE: ./src/index.css\nvar src = __webpack_require__(21);\n\n// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules\nvar slicedToArray = __webpack_require__(2);\n\n// CONCATENATED MODULE: ./src/gameHelpers.js\nvar STAGE_WIDTH=12;var STAGE_HEIGHT=20;var createStage=function createStage(){return Array.from(Array(STAGE_HEIGHT),function(){return new Array(STAGE_WIDTH).fill([0,'clear']);});};// this creates the initial game field\n// each cell in the field contains a tuple\n// the first value represents the tetrimino shape occupying the cell\n// 0 means nothing in the cell\n// the second tuple value tells whether the cell needs to be emptied\n// because a line is full\n// or if it can go untouched\n// the JS object renames the parameters within the function\nvar checkCollision=function checkCollision(player,stage,_ref){var moveX=_ref.x,moveY=_ref.y;for(var y=0;y<player.tetromino.length;y+=1){for(var x=0;x<player.tetromino[y].length;x+=1){// 1. check that we're in a non-empty cell\nif(player.tetromino[y][x]!==0){console.log(\"new x: \".concat(x+player.pos.x+moveX,\" new y: \").concat(y+player.pos.y+moveY));var newX=x+player.pos.x+moveX;var newY=y+player.pos.y+moveY;if(// 2. check the new position is within the game area's height\n!stage[newY]||// newY >= 0 && newY < stage.length &&\n// 3. check we're within the game area's width\n!stage[newY][newX]||// newX >= 0 && newX < stage[0].length &&\n// 4. check we are not colliding with a placed tetromino\n// this is done by checking if the cell is NOT set to 'clear'\nstage[newY][newX][1]!=='clear'){return true;}}}}};\n// CONCATENATED MODULE: ./src/tetrominos.js\nvar TETROMINOS={0:{shape:[[0]],color:'0, 0, 0'},I:{shape:[[0,'I',0,0],[0,'I',0,0],[0,'I',0,0],[0,'I',0,0]],color:'80, 227, 230'},J:{shape:[[0,'J',0],[0,'J',0],['J','J',0]],color:'36, 95, 223'},L:{shape:[[0,'L',0],[0,'L',0],[0,'L','L']],color:'223, 173, 36'},O:{shape:[['O','O'],['O','O']],color:'223, 217, 36'},S:{shape:[[0,'S','S'],['S','S',0],[0,0,0]],color:'48, 211, 56'},T:{shape:[[0,0,0],['T','T','T'],[0,'T',0]],color:'132, 61, 198'},Z:{shape:[['Z','Z',0],[0,'Z','Z'],[0,0,0]],color:'227, 78, 78'}};// this function returns a random tetromino\nvar randomTetromino=function randomTetromino(){var tetrominos='IJLOSTZ';var randomTetromino=tetrominos[Math.floor(Math.random()*tetrominos.length)];return TETROMINOS[randomTetromino];};// export const TETROMINOS = {\n//     0: { shape: [[0]], color: '0, 0, 0' },\n//     I: {\n//       shape: [[0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0]],\n//       color: '80, 227, 230',\n//     },\n//     J: {\n//       shape: [[0, 'J', 0], [0, 'J', 0], ['J', 'J', 0]],\n//       color: '36, 95, 223',\n//     },\n//     L: {\n//       shape: [[0, 'L', 0], [0, 'L', 0], [0, 'L', 'L']],\n//       color: '223, 173, 36',\n//     },\n//     O: {\n//       shape: [['O', 'O'], ['O', 'O']],\n//       color: '223, 217, 36',\n//     },\n//     S: {\n//       shape: [[0, 'S', 'S'], ['S', 'S', 0], [0, 0, 0]],\n//       color: '48, 211, 56',\n//     },\n//     T: {\n//       shape: [[0, 0, 0], ['T', 'T', 'T'], [0, 'T', 0]],\n//       color: '132, 61, 198',\n//     },\n//     Z: {\n//       shape: [['Z', 'Z', 0], [0, 'Z', 'Z'], [0, 0, 0]],\n//       color: '227, 78, 78',\n//     },\n//   };\n//   export const randomTetromino = () => {\n//     const tetrominos = 'IJLOSTZ';\n//     const randTetromino =\n//       tetrominos[Math.floor(Math.random() * tetrominos.length)];\n//     return TETROMINOS[randTetromino];\n//   };\n// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\nvar taggedTemplateLiteral = __webpack_require__(3);\n\n// EXTERNAL MODULE: ./node_modules/styled-components/dist/styled-components.browser.esm.js\nvar styled_components_browser_esm = __webpack_require__(4);\n\n// CONCATENATED MODULE: ./src/components/styles/StyledCell.js\nvar _templateObject;var StyledCell=styled_components_browser_esm[\"a\" /* default */].div(_templateObject||(_templateObject=Object(taggedTemplateLiteral[\"a\" /* default */])([\"\\n    width: auto;\\n    background: rgba(\",\", 0.8);\\n    border: \",\";\\n    border-bottom-color: rgba(\",\", 0.1);\\n    border-right-color: rgba(\",\", 1);\\n    border-top-color: rgba(\",\", 1);\\n    border-left-color: rgba(\",\", 0.3);\\n\"])),function(props){return props.color;},function(props){return props.type===0?'0px solid':'4px solid';},function(props){return props.color;},function(props){return props.color;},function(props){return props.color;},function(props){return props.color;});\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(1);\n\n// CONCATENATED MODULE: ./src/components/Cell.js\n// cell is a simply a styled div element representing a cell in the grid\nvar Cell_Cell=function Cell(_ref){var type=_ref.type;return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(StyledCell,{type:type,color:TETROMINOS[type].color});};/* harmony default export */ var components_Cell = (Cell_Cell);\n// CONCATENATED MODULE: ./src/components/styles/StyledStage.js\nvar StyledStage_templateObject;var StyledStage=styled_components_browser_esm[\"a\" /* default */].div(StyledStage_templateObject||(StyledStage_templateObject=Object(taggedTemplateLiteral[\"a\" /* default */])([\"\\n    display: grid;\\n    grid-template-rows: repeat(\\n        \",\",\\n        calc(25vw / \",\")\\n    );\\n    grid-template-columns: repeat(\",\", 1fr);\\n    grid-gap: 1px;\\n    border: 2px solid #333;\\n    width: 100%;\\n    max-width: 25vw;\\n    background: #111;\\n\"])),function(props){return props.height;},function(props){return props.width;},function(props){return props.width;});\n// CONCATENATED MODULE: ./src/components/Stage.js\n// Stage is the representation of the game field\nvar Stage_Stage=function Stage(_ref){var stage=_ref.stage;return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(StyledStage,{width:stage[0].length,height:stage.length,children:stage.map(function(row){return row.map(function(cell,x){return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(components_Cell,{type:cell[0]},x);});})});};/* harmony default export */ var components_Stage = (Stage_Stage);\n// CONCATENATED MODULE: ./src/components/styles/StyledDisplay.js\nvar StyledDisplay_templateObject;var StyledDisplay=styled_components_browser_esm[\"a\" /* default */].div(StyledDisplay_templateObject||(StyledDisplay_templateObject=Object(taggedTemplateLiteral[\"a\" /* default */])([\"\\n    box-sizing: border-box;\\n    display: flex;\\n    align-items: center;\\n    margin: 0 0 20px 0;\\n    padding: 20px;\\n    border: 4px solid #333;\\n    min-height: 30px;\\n    width: 100%;\\n    border-radius: 20px;\\n    color: \",\";\\n    background: #000;\\n    font-family: Pixel, Arial, Helvetica, sans-serif;\\n    font-size: 0.8rem;\\n\"])),function(props){return props.gameOver?'red':'#999';});\n// CONCATENATED MODULE: ./src/components/Display.js\n// Display represents the UI\nvar Display_Display=function Display(_ref){var gameOver=_ref.gameOver,text=_ref.text;return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(StyledDisplay,{gameOver:gameOver,children:text});};/* harmony default export */ var components_Display = (Display_Display);\n// CONCATENATED MODULE: ./src/components/styles/StyledStartButton.js\nvar StyledStartButton_templateObject;var StyledStartButton=styled_components_browser_esm[\"a\" /* default */].div(StyledStartButton_templateObject||(StyledStartButton_templateObject=Object(taggedTemplateLiteral[\"a\" /* default */])([\"\\n    box-sizing: border-box;\\n    margin: 0 0 20px 0;\\n    padding: 20px;\\n    min-height: 30px;\\n    width: 100%;\\n    border-radius: 20px;\\n    border: none;\\n    color: white;\\n    background: #333;\\n    font-family: Pixel, Arial, Helvetica, sans-serif;\\n    font-size: 1rem;\\n    outline: none;\\n    cursor: pointer;\\n\"])));\n// CONCATENATED MODULE: ./src/components/StartButton.js\n// A button that starts a new game\nvar StartButton_StartButton=function StartButton(_ref){var callback=_ref.callback;return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(StyledStartButton,{onClick:callback,children:\"Start Game\"});};/* harmony default export */ var components_StartButton = (StartButton_StartButton);\n// CONCATENATED MODULE: ./src/img/bg.png\n/* harmony default export */ var bg = (__webpack_require__.p + \"static/media/bg.d63cfd51.png\");\n// CONCATENATED MODULE: ./src/components/styles/StyledTetris.js\nvar StyledTetris_templateObject,_templateObject2;var StyledTetrisWrapper=styled_components_browser_esm[\"a\" /* default */].div(StyledTetris_templateObject||(StyledTetris_templateObject=Object(taggedTemplateLiteral[\"a\" /* default */])([\"\\n    width: 100vw;\\n    height: 100vh;\\n\\n    background: url(\",\") #000;\\n    background-size: cover;\\n    overflow: hidden;\\n\"])),bg);var StyledTetris=styled_components_browser_esm[\"a\" /* default */].div(_templateObject2||(_templateObject2=Object(taggedTemplateLiteral[\"a\" /* default */])([\"\\n    display: flex;\\n    align-items: flex-start;\\n    padding: 40px;\\n    margin: 0 auto;\\n    max-width: 900px;\\n\\n    aside {\\n        width: 100%;\\n        max-width: 200px;\\n        display: block;\\n        padding: 0 20px;\\n    }\\n\"])));\n// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 3 modules\nvar toConsumableArray = __webpack_require__(16);\n\n// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js + 1 modules\nvar objectSpread2 = __webpack_require__(5);\n\n// CONCATENATED MODULE: ./src/hooks/usePlayer.js\n// React Hooks should begin with 'use'\n// we only need useState from react\nvar usePlayer_usePlayer=function usePlayer(){// use state returns an array with two values\n// (we use ES6 destructuring to access these two vals)\n// the first is effectively a getter, a variable which can be used\n//  to read state\n// the second value is a setter function\n// note we can set default state by passing a value to useState\nvar _useState=Object(react[\"useState\"])({pos:{x:0,y:0},tetromino:TETROMINOS[0].shape,collided:false}),_useState2=Object(slicedToArray[\"a\" /* default */])(_useState,2),player=_useState2[0],setPlayer=_useState2[1];// performs a rotation on a matrix\nvar rotate=function rotate(matrix,dir){// make the rows into columns (transpose)\nvar rotatedTetromino=matrix.map(function(_,index){return matrix.map(function(col){return col[index];});});// then reverse each row (if applicable)\n// this will give the rotated matrix\nif(dir>0)return rotatedTetromino.map(function(row){return row.reverse();});return rotatedTetromino;};// performs a rotation of a tetromino\n// and handles any collision that occurs\nvar playerRotate=function playerRotate(stage,dir){// const copiedTetromino = { ...player };\n// const copiedTetromino = JSON.parse(JSON.stringify(player));\nvar copiedTetromino=Object(objectSpread2[\"a\" /* default */])(Object(objectSpread2[\"a\" /* default */])({},player),{},{pos:Object(objectSpread2[\"a\" /* default */])({},player.pos),tetromino:Object(toConsumableArray[\"a\" /* default */])(player.tetromino)});copiedTetromino.tetromino=rotate(copiedTetromino.tetromino,dir);var position=copiedTetromino.pos.x;var offset=1;// this works by \"projecting\" the current piece left and right slightly\n// if the current piece can't fit to the left or right,\n// we shouldn't allow for rotation\nwhile(checkCollision(copiedTetromino,stage,{x:0,y:0})){// initially, we move the piece right by 1\ncopiedTetromino.pos.x+=offset;// basically, this routine shifts the tetromino back and forth\n// but if we are offset beyond the size of the teromino\n// and we are still colliding with something,\n// we can't rotate the piece in the current position\n// because there simply isn't room.\noffset=-(offset+(offset>0?1:-1));if(offset>copiedTetromino.tetromino[0].length){// rotate(copiedTetromino.tetromino, -dir);\n// copiedTetromino.pos.x = position;\nreturn;}}setPlayer(copiedTetromino);};// a helper function that updates player position\n// it usese the setter function generated above\nvar updatePlayerPos=function updatePlayerPos(_ref){var x=_ref.x,y=_ref.y,collided=_ref.collided;// pass an arrow function\n// note that a callback is passed\n// you can pass a callback if your new state depends on the old\nsetPlayer(function(prev){return Object(objectSpread2[\"a\" /* default */])(Object(objectSpread2[\"a\" /* default */])({},prev),{},{pos:{x:prev.pos.x+=x,y:prev.pos.y+=y},collided:collided});});};// useCallback returns a memoized callback\n// that is, the exact function generated by this hook\n// is preserved between calls of this custom hook\n// (all other callbacks will be recreated each hook call)\n// because it is memoized, each unique input returns\n// the exact same function\n// the inputs are determined by the array given as the second arg\n// so in this case, we just want to create this function once\nvar resetPlayer=Object(react[\"useCallback\"])(function(){setPlayer({pos:{x:STAGE_WIDTH/2-2,y:0},tetromino:randomTetromino().shape,collided:false});},[]);// we will import this hook into the tetris component\n// by returning the player setter, we can then use the return\n// value to query the player state in tetris component\nreturn[player,updatePlayerPos,resetPlayer,playerRotate];};\n// CONCATENATED MODULE: ./src/hooks/useStage.js\nvar useStage_useStage=function useStage(player,resetPlayer){var _useState=Object(react[\"useState\"])(createStage()),_useState2=Object(slicedToArray[\"a\" /* default */])(_useState,2),stage=_useState2[0],setStage=_useState2[1];// used to count number of cleared rows (used to compute score)\nvar _useState3=Object(react[\"useState\"])(0),_useState4=Object(slicedToArray[\"a\" /* default */])(_useState3,2),rowsCleared=_useState4[0],setRowsCleared=_useState4[1];// useEffect is used to allow you to make changes due to side effects\n// basically, hooks try to avoid side effects, but it isn't quite possible\n// to eliminate them\n// useEffect takes a callback and a list of dependancies\n// if you omit the dependancies, this callback will fire after every render\n// otherwise, it will fire after a render IF a dependancy changes\nObject(react[\"useEffect\"])(function(){setRowsCleared(0);// this function clears out complete rows\nvar sweepRows=function sweepRows(newStage){return(// we use the reduce method\nnewStage.reduce(function(acc,row){// a row in the stage is filled if all values are greater than 0\n// so we search the row for 0\n// if there are no 0s, clear the cell\nif(row.findIndex(function(cell){return cell[0]===0;})===-1){// also increment the number of rows we've cleared\nsetRowsCleared(function(prev){return prev+1;});// here we create a new, empty row\n// which we use unshift to add it to the top of the stage\nacc.unshift(new Array(newStage[0].length).fill([0,'clear']));return acc;}// if the row isn't filled, just return the current row\nacc.push(row);return acc;},[]));};var updateStage=function updateStage(prevStage){// first we clear the stage so we can rewrite new data to it\nvar newStage=prevStage.map(function(row){return(// if the cell is marked as clear, we need to clear it\n// this is done by putting 0, the 'no tetromino' marker\n// otherwise, just replace it with the same cell value\nrow.map(function(cell){return cell[1]==='clear'?[0,'clear']:cell;}));});// then we draw the tetromino\n// player basically refers to the current falling game piece\n// so this splices in the current falling tetrimino into the grid\n// in the appropriate position\nplayer.tetromino.forEach(function(row,y){row.forEach(function(value,x){// we skip values that are 0, which are blank\n// values in the tetromino\nif(value!==0){newStage[y+player.pos.y][x+player.pos.x]=[value,\"\".concat(player.collided?'merged':'clear')];}});});// do collision detection\n// if the current falling piece collided with something, \n// we should stop moving the current piece\n// and bring a new one to the top of the play field\nif(player.collided){resetPlayer();// additionally, now would be the time where we would check if\n// we need to clear rows\nreturn sweepRows(newStage);}return newStage;};// call the stage setter using the above instructions\nsetStage(function(prev){return updateStage(prev);});},[player,player.collided]);// this hook will allow us to both read and alter the stage state\n// so return both the getter and the setter\nreturn[stage,setStage,rowsCleared];};\n// CONCATENATED MODULE: ./src/hooks/useInterval.js\nfunction useInterval(callback,delay){var savedCallback=Object(react[\"useRef\"])();// Remember the latest callback.\nObject(react[\"useEffect\"])(function(){savedCallback.current=callback;},[callback]);// Set up the interval.\nObject(react[\"useEffect\"])(function(){function tick(){savedCallback.current();}if(delay!==null){var id=setInterval(tick,delay);return function(){clearInterval(id);};}},[delay]);}\n// CONCATENATED MODULE: ./src/hooks/useGameStatus.js\nvar useGameStatus_useGameStatus=function useGameStatus(rowsCleared){var _useState=Object(react[\"useState\"])(0),_useState2=Object(slicedToArray[\"a\" /* default */])(_useState,2),score=_useState2[0],setScore=_useState2[1];// this is used to track how many TOTAL rows the player has cleared\nvar _useState3=Object(react[\"useState\"])(0),_useState4=Object(slicedToArray[\"a\" /* default */])(_useState3,2),rows=_useState4[0],setRows=_useState4[1];var _useState5=Object(react[\"useState\"])(0),_useState6=Object(slicedToArray[\"a\" /* default */])(_useState5,2),level=_useState6[0],setLevel=_useState6[1];// the number of points you get for clearing lines\n// the more lines you clear at once, the larger the reward\n// these are the values used in the OG tetris game\nvar linePoints=[40,100,300,1200];// this will recalculate the score\n// this function is fired whenever the level,\n// the line points, or the number of cleared rows changes\n// so it won't fire on every render, which is good for efficiency\nvar calcScore=Object(react[\"useCallback\"])(function(){// check if we've actually cleared any rows\nif(rowsCleared>0){// we use both the rows cleared and the current level to calculate \n// this is the formula used in OG tetris\nsetScore(function(prev){return prev+linePoints[rowsCleared-1]*(level+1);});setRows(function(prev){return prev+rowsCleared;});}},[level,linePoints,rowsCleared]);// an effect that should run whenever the score changes\nObject(react[\"useEffect\"])(function(){calcScore();},[calcScore,rowsCleared,score]);return[score,setScore,rows,setRows,level,setLevel];};\n// CONCATENATED MODULE: ./src/components/Tetris.js\n// components\n// styling\n// custom hooks\nvar Tetris_Tetris=function Tetris(_ref){var type=_ref.type;// a hook used to alter speed the tetromino drops at\nvar _useState=Object(react[\"useState\"])(null),_useState2=Object(slicedToArray[\"a\" /* default */])(_useState,2),dropTime=_useState2[0],setDropTime=_useState2[1];// a hook to get/set the gameover state\nvar _useState3=Object(react[\"useState\"])(false),_useState4=Object(slicedToArray[\"a\" /* default */])(_useState3,2),gameOver=_useState4[0],setGameOver=_useState4[1];// get the getters/setters from our custom hooks\nvar _usePlayer=usePlayer_usePlayer(),_usePlayer2=Object(slicedToArray[\"a\" /* default */])(_usePlayer,4),player=_usePlayer2[0],updatePlayerPos=_usePlayer2[1],resetPlayer=_usePlayer2[2],playerRotate=_usePlayer2[3];var _useStage=useStage_useStage(player,resetPlayer),_useStage2=Object(slicedToArray[\"a\" /* default */])(_useStage,3),stage=_useStage2[0],setStage=_useStage2[1],rowsCleared=_useStage2[2];var _useGameStatus=useGameStatus_useGameStatus(rowsCleared),_useGameStatus2=Object(slicedToArray[\"a\" /* default */])(_useGameStatus,6),score=_useGameStatus2[0],setScore=_useGameStatus2[1],rows=_useGameStatus2[2],setRows=_useGameStatus2[3],level=_useGameStatus2[4],setLevel=_useGameStatus2[5];console.log('re-rendered game');// a callback that manages user keypresses\nvar move=function move(_ref2){var keyCode=_ref2.keyCode;// these controls hold during gameplay,\n// so check if we're in game over\nif(!gameOver){// left arrow\nif(keyCode===37){// move left\nmovePlayer(-1);}// right arrow\nelse if(keyCode===39){// move right\nmovePlayer(1);}// down key\nelse if(keyCode===40){// drop the piece\ndropPlayer();}// up key\nelse if(keyCode===38){playerRotate(stage,1);}}};// update the position of the falling teromino\nvar movePlayer=function movePlayer(dir){// only move if we aren't colliding with anything\nif(!checkCollision(player,stage,{x:dir,y:0})){updatePlayerPos({x:dir,y:0});}};var startGame=function startGame(){// reset everything\n// clear the stage\nsetStage(createStage());setDropTime(1000);// bring a new piece to the top of the stage\nresetPlayer();// set game over to false\nsetGameOver(false);// reset score\nsetScore(0);setRows(0);setLevel(0);};// attempt to drop the tetromino down one level\nvar drop=function drop(){// increase level when player has cleared 10 rows\nif(rows>(level+1)*10){setLevel(function(prev){return prev+1;});setDropTime(1000/(level+1)+200);}// if the space below is free...\nif(!checkCollision(player,stage,{x:0,y:1})){// move the piece down\nupdatePlayerPos({x:0,y:1,collided:false});// otherwise...\n}else{// if we have stacked pieces up to the top\n// (that is, position 0 in the stage grid)...\nif(player.pos.y<1){// we are in the game over state\nconsole.log(\"Game Over\");setGameOver(true);// we should also clear the drop time\nsetDropTime(null);}// if nothing else holds, that means this piece has\n// been obstructed and should stop moving\nupdatePlayerPos({x:0,y:0,collided:true});}};// this resets the drop speed if we release the down key\nvar keyUp=function keyUp(_ref3){var keyCode=_ref3.keyCode;if(!gameOver){if(keyCode===40){console.log(\"Interval On\");setDropTime(1000/(level+1)+200);}}};var dropPlayer=function dropPlayer(){// while we manually drop pieces, we want to stop the timed drop\nconsole.log(\"Interval Off\");setDropTime(null);drop();};// \nuseInterval(function(){drop();},dropTime);return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(StyledTetrisWrapper,{role:\"button\",tabIndex:\"0\",onKeyDown:function onKeyDown(e){return move(e);},onKeyUp:keyUp,children:/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(StyledTetris,{children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(components_Stage,{stage:stage}),/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"aside\",{children:[gameOver?/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(components_Display,{gameOver:gameOver,text:\"Game Over\"}):/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(components_Display,{text:\"score: \".concat(score)}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(components_Display,{text:\"rows: \".concat(rows)}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(components_Display,{text:\"level: \".concat(level)})]}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(components_StartButton,{callback:startGame})]})]})});};/* harmony default export */ var components_Tetris = (Tetris_Tetris);\n// CONCATENATED MODULE: ./src/App.js\nvar App_App=function App(){return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{className:\"App\",children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(components_Tetris,{})});};/* harmony default export */ var src_App = (App_App);\n// CONCATENATED MODULE: ./src/reportWebVitals.js\nvar reportWebVitals=function reportWebVitals(onPerfEntry){if(onPerfEntry&&onPerfEntry instanceof Function){__webpack_require__.e(/* import() */ 3).then(__webpack_require__.bind(null, 28)).then(function(_ref){var getCLS=_ref.getCLS,getFID=_ref.getFID,getFCP=_ref.getFCP,getLCP=_ref.getLCP,getTTFB=_ref.getTTFB;getCLS(onPerfEntry);getFID(onPerfEntry);getFCP(onPerfEntry);getLCP(onPerfEntry);getTTFB(onPerfEntry);});}};/* harmony default export */ var src_reportWebVitals = (reportWebVitals);\n// CONCATENATED MODULE: ./src/index.js\nreact_dom_default.a.render(/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(src_App,{}),document.getElementById('root'));// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nsrc_reportWebVitals();\n\n/***/ })\n\n},[[27,1,2]]]);","inputSourceMap":{"version":3,"sources":["/home/stan/react-tetris/app/node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-4-0!/home/stan/react-tetris/app/node_modules/css-loader/dist/cjs.js??ref--5-oneOf-4-1!/home/stan/react-tetris/app/node_modules/postcss-loader/src/index.js??postcss!/home/stan/react-tetris/app/src/index.css","/home/stan/react-tetris/app/src/gameHelpers.js","/home/stan/react-tetris/app/src/tetrominos.js","/home/stan/react-tetris/app/src/components/styles/StyledCell.js","/home/stan/react-tetris/app/src/components/Cell.js","/home/stan/react-tetris/app/src/components/styles/StyledStage.js","/home/stan/react-tetris/app/src/components/Stage.js","/home/stan/react-tetris/app/src/components/styles/StyledDisplay.js","/home/stan/react-tetris/app/src/components/Display.js","/home/stan/react-tetris/app/src/components/styles/StyledStartButton.js","/home/stan/react-tetris/app/src/components/StartButton.js","/home/stan/react-tetris/app/node_modules/url-loader/dist/cjs.js??ref--5-oneOf-1!/home/stan/react-tetris/app/src/img/bg.png","/home/stan/react-tetris/app/src/components/styles/StyledTetris.js","/home/stan/react-tetris/app/src/hooks/usePlayer.js","/home/stan/react-tetris/app/src/hooks/useStage.js","/home/stan/react-tetris/app/src/hooks/useInterval.js","/home/stan/react-tetris/app/src/hooks/useGameStatus.js","/home/stan/react-tetris/app/src/components/Tetris.js","/home/stan/react-tetris/app/src/App.js","/home/stan/react-tetris/app/src/reportWebVitals.js","/home/stan/react-tetris/app/src/index.js"],"names":["STAGE_WIDTH","STAGE_HEIGHT","createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","console","log","pos","newX","newY","TETROMINOS","shape","color","I","J","L","O","S","T","Z","randomTetromino","tetrominos","Math","floor","random","StyledCell","styled","div","props","type","Cell","StyledStage","height","width","Stage","map","row","cell","StyledDisplay","gameOver","Display","text","StyledStartButton","StartButton","callback","StyledTetrisWrapper","bgImage","StyledTetris","usePlayer","useState","collided","setPlayer","rotate","matrix","dir","rotatedTetromino","_","index","col","reverse","playerRotate","copiedTetromino","position","offset","updatePlayerPos","prev","resetPlayer","useCallback","useStage","setStage","rowsCleared","setRowsCleared","useEffect","sweepRows","newStage","reduce","acc","findIndex","unshift","push","updateStage","prevStage","forEach","value","useInterval","delay","savedCallback","useRef","current","tick","id","setInterval","clearInterval","useGameStatus","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","Tetris","dropTime","setDropTime","setGameOver","move","keyCode","movePlayer","dropPlayer","startGame","drop","keyUp","e","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"x","sourcesContent":["// extracted by mini-css-extract-plugin","export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () => \n    Array.from(Array(STAGE_HEIGHT), () =>\n        new Array(STAGE_WIDTH).fill([0, 'clear'])\n    );\n// this creates the initial game field\n// each cell in the field contains a tuple\n// the first value represents the tetrimino shape occupying the cell\n// 0 means nothing in the cell\n// the second tuple value tells whether the cell needs to be emptied\n// because a line is full\n// or if it can go untouched\n\n// the JS object renames the parameters within the function\nexport const checkCollision = (player, stage, { x: moveX, y: moveY}) => {\n    for (let y = 0; y < player.tetromino.length; y += 1) {\n        for (let x = 0; x < player.tetromino[y].length; x += 1) {\n            // 1. check that we're in a non-empty cell\n            if (player.tetromino[y][x] !== 0) {\n                console.log(`new x: ${x + player.pos.x + moveX} new y: ${y + player.pos.y + moveY}`)\n                const newX = x + player.pos.x + moveX;\n                const newY = y + player.pos.y + moveY;\n                if(\n                    // 2. check the new position is within the game area's height\n                    !stage[newY] || \n                    // newY >= 0 && newY < stage.length &&\n                    // 3. check we're within the game area's width\n                    !stage[newY][newX] ||\n                    // newX >= 0 && newX < stage[0].length &&\n                    // 4. check we are not colliding with a placed tetromino\n                    // this is done by checking if the cell is NOT set to 'clear'\n                    stage[newY][newX][1] !== 'clear'\n                ) {\n                    return true;\n                }\n            }\n        }\n    }\n}","export const TETROMINOS = {\n    0: { shape: [[0]], color: '0, 0, 0'},\n    I: { shape:\n        [\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0]\n        ],\n        color: '80, 227, 230'\n    },\n    J: { shape:\n        [\n            [0, 'J', 0],\n            [0, 'J', 0],\n            ['J', 'J', 0],\n        ],\n        color: '36, 95, 223'\n    },\n    L: { shape:\n        [\n            [0, 'L', 0],\n            [0, 'L', 0],\n            [0, 'L', 'L'],\n        ],\n        color: '223, 173, 36'\n    },\n    O: { shape:\n        [\n            ['O', 'O'],\n            ['O', 'O']\n        ],\n        color: '223, 217, 36'\n    },\n    S: { shape:\n        [\n            [0, 'S', 'S'],\n            ['S', 'S', 0],\n            [0, 0, 0],\n        ],\n        color: '48, 211, 56'\n    },\n    T: { shape:\n        [\n            [0, 0, 0],\n            ['T', 'T', 'T'],\n            [0, 'T', 0]\n        ],\n        color: '132, 61, 198'\n    },\n    Z: { shape:\n        [\n            ['Z', 'Z', 0],\n            [0, 'Z', 'Z'],\n            [0, 0, 0],\n        ],\n        color: '227, 78, 78'\n    },\n}\n\n// this function returns a random tetromino\nexport const randomTetromino = () => {\n    const tetrominos = 'IJLOSTZ';\n    const randomTetromino =\n        tetrominos[Math.floor(Math.random() * tetrominos.length)];\n    \n    return TETROMINOS[randomTetromino];\n}\n\n// export const TETROMINOS = {\n//     0: { shape: [[0]], color: '0, 0, 0' },\n//     I: {\n//       shape: [[0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0]],\n//       color: '80, 227, 230',\n//     },\n//     J: {\n//       shape: [[0, 'J', 0], [0, 'J', 0], ['J', 'J', 0]],\n//       color: '36, 95, 223',\n//     },\n//     L: {\n//       shape: [[0, 'L', 0], [0, 'L', 0], [0, 'L', 'L']],\n//       color: '223, 173, 36',\n//     },\n//     O: {\n//       shape: [['O', 'O'], ['O', 'O']],\n//       color: '223, 217, 36',\n//     },\n//     S: {\n//       shape: [[0, 'S', 'S'], ['S', 'S', 0], [0, 0, 0]],\n//       color: '48, 211, 56',\n//     },\n//     T: {\n//       shape: [[0, 0, 0], ['T', 'T', 'T'], [0, 'T', 0]],\n//       color: '132, 61, 198',\n//     },\n//     Z: {\n//       shape: [['Z', 'Z', 0], [0, 'Z', 'Z'], [0, 0, 0]],\n//       color: '227, 78, 78',\n//     },\n//   };\n  \n//   export const randomTetromino = () => {\n//     const tetrominos = 'IJLOSTZ';\n//     const randTetromino =\n//       tetrominos[Math.floor(Math.random() * tetrominos.length)];\n//     return TETROMINOS[randTetromino];\n//   };\n  ","import styled from 'styled-components';\n\nexport const StyledCell = styled.div`\n    width: auto;\n    background: rgba(${props => props.color}, 0.8);\n    border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n    border-bottom-color: rgba(${props => props.color}, 0.1);\n    border-right-color: rgba(${props => props.color}, 1);\n    border-top-color: rgba(${props => props.color}, 1);\n    border-left-color: rgba(${props => props.color}, 0.3);\n`","import React from 'react';\n\nimport {TETROMINOS} from \"../tetrominos\";\n\nimport {StyledCell} from './styles/StyledCell';\n\n// cell is a simply a styled div element representing a cell in the grid\nconst Cell = ({ type }) => (\n    <StyledCell type={type} color={TETROMINOS[type].color} />\n)\n\nexport default Cell;\n","import styled from 'styled-components';\n\nexport const StyledStage = styled.div`\n    display: grid;\n    grid-template-rows: repeat(\n        ${props => props.height},\n        calc(25vw / ${props => props.width})\n    );\n    grid-template-columns: repeat(${props => props.width}, 1fr);\n    grid-gap: 1px;\n    border: 2px solid #333;\n    width: 100%;\n    max-width: 25vw;\n    background: #111;\n`;\n\n","import React from 'react';\n\nimport Cell from './Cell';\n\nimport { StyledStage } from \"./styles/StyledStage\";\n\n// Stage is the representation of the game field\nconst Stage = ({ stage }) => (\n    <StyledStage width={stage[0].length} height={stage.length}> \n        {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]}/>))}\n    </StyledStage>\n)\n\nexport default Stage;","import styled from 'styled-components';\n\nexport const StyledDisplay = styled.div`\n    box-sizing: border-box;\n    display: flex;\n    align-items: center;\n    margin: 0 0 20px 0;\n    padding: 20px;\n    border: 4px solid #333;\n    min-height: 30px;\n    width: 100%;\n    border-radius: 20px;\n    color: ${props => (props.gameOver ? 'red' : '#999')};\n    background: #000;\n    font-family: Pixel, Arial, Helvetica, sans-serif;\n    font-size: 0.8rem;\n`","import React from 'react';\n\nimport { StyledDisplay } from \"./styles/StyledDisplay\";\n\n// Display represents the UI\nconst Display = ({ gameOver, text }) => (\n    <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n)\n\nexport default Display;","import styled from 'styled-components';\n\nexport const StyledStartButton = styled.div`\n    box-sizing: border-box;\n    margin: 0 0 20px 0;\n    padding: 20px;\n    min-height: 30px;\n    width: 100%;\n    border-radius: 20px;\n    border: none;\n    color: white;\n    background: #333;\n    font-family: Pixel, Arial, Helvetica, sans-serif;\n    font-size: 1rem;\n    outline: none;\n    cursor: pointer;\n`","import React from 'react';\n\nimport { StyledStartButton } from \"./styles/StyledStartButton\";\n\n// A button that starts a new game\nconst StartButton = ({ callback }) => (\n    <StyledStartButton onClick={callback}>Start Game</StyledStartButton>\n)\n\nexport default StartButton;\n","export default __webpack_public_path__ + \"static/media/bg.d63cfd51.png\";","import styled from 'styled-components';\n\nimport bgImage from '../../img/bg.png';\n\nexport const StyledTetrisWrapper = styled.div`\n    width: 100vw;\n    height: 100vh;\n\n    background: url(${bgImage}) #000;\n    background-size: cover;\n    overflow: hidden;\n`\n\nexport const StyledTetris = styled.div`\n    display: flex;\n    align-items: flex-start;\n    padding: 40px;\n    margin: 0 auto;\n    max-width: 900px;\n\n    aside {\n        width: 100%;\n        max-width: 200px;\n        display: block;\n        padding: 0 20px;\n    }\n`","// React Hooks should begin with 'use'\n\n// we only need useState from react\nimport { useState, useCallback, cloneElement } from 'react';\nimport { checkCollision, STAGE_WIDTH } from '../gameHelpers';\n\nimport { TETROMINOS, randomTetromino } from \"../tetrominos\";\n\nexport const usePlayer = () => {\n    // use state returns an array with two values\n    // (we use ES6 destructuring to access these two vals)\n    // the first is effectively a getter, a variable which can be used\n    //  to read state\n    // the second value is a setter function\n    // note we can set default state by passing a value to useState\n    const [player, setPlayer] = useState({\n        pos: { x: 0, y: 0},\n        tetromino: TETROMINOS[0].shape,\n        collided: false\n    });\n\n    // performs a rotation on a matrix\n    const rotate = (matrix, dir) => {\n        // make the rows into columns (transpose)\n        const rotatedTetromino = matrix.map((_, index) => \n            matrix.map(col => col[index]),\n        )\n        // then reverse each row (if applicable)\n        // this will give the rotated matrix\n        if (dir > 0) return rotatedTetromino.map(row => row.reverse());\n        return rotatedTetromino;\n    }\n\n    // performs a rotation of a tetromino\n    // and handles any collision that occurs\n    const playerRotate = (stage, dir) => {\n        // const copiedTetromino = { ...player };\n        // const copiedTetromino = JSON.parse(JSON.stringify(player));\n        const copiedTetromino = { ...player, pos: { ...player.pos}, tetromino: [...player.tetromino] }\n        copiedTetromino.tetromino = rotate(copiedTetromino.tetromino, dir);\n\n        const position = copiedTetromino.pos.x;        \n        let offset = 1;\n        // this works by \"projecting\" the current piece left and right slightly\n        // if the current piece can't fit to the left or right,\n        // we shouldn't allow for rotation\n        while(checkCollision(copiedTetromino, stage, { x: 0, y: 0})) {\n            // initially, we move the piece right by 1\n            copiedTetromino.pos.x += offset;\n\n            // basically, this routine shifts the tetromino back and forth\n            // but if we are offset beyond the size of the teromino\n            // and we are still colliding with something,\n            // we can't rotate the piece in the current position\n            // because there simply isn't room.\n            offset = -(offset + (offset > 0 ? 1 : -1));\n\n            if (offset > copiedTetromino.tetromino[0].length) {\n                // rotate(copiedTetromino.tetromino, -dir);\n                // copiedTetromino.pos.x = position;\n\n                return;\n            }\n        }\n\n        setPlayer(copiedTetromino);\n    }\n\n    // a helper function that updates player position\n    // it usese the setter function generated above\n    const updatePlayerPos = ({x, y, collided}) => {\n        // pass an arrow function\n        // note that a callback is passed\n        // you can pass a callback if your new state depends on the old\n        setPlayer(prev => ({\n            ...prev,\n            pos: { x: (prev.pos.x += x), y: prev.pos.y += y},\n            collided\n        }));\n    }\n\n    // useCallback returns a memoized callback\n    // that is, the exact function generated by this hook\n    // is preserved between calls of this custom hook\n    // (all other callbacks will be recreated each hook call)\n    // because it is memoized, each unique input returns\n    // the exact same function\n    // the inputs are determined by the array given as the second arg\n    // so in this case, we just want to create this function once\n    const resetPlayer = useCallback(() => {\n        setPlayer({\n            pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n            tetromino: randomTetromino().shape,\n            collided: false\n        })\n    }, []);\n\n    // we will import this hook into the tetris component\n    // by returning the player setter, we can then use the return\n    // value to query the player state in tetris component\n    return [player, updatePlayerPos, resetPlayer, playerRotate];\n}\n","import { useState, useEffect } from \"react\";\n\nimport { createStage } from \"../gameHelpers\";\n\nexport const useStage = (player, resetPlayer) => {\n    const [stage, setStage] = useState(createStage());\n    // used to count number of cleared rows (used to compute score)\n    const [rowsCleared, setRowsCleared] = useState(0);\n\n    // useEffect is used to allow you to make changes due to side effects\n    // basically, hooks try to avoid side effects, but it isn't quite possible\n    // to eliminate them\n    // useEffect takes a callback and a list of dependancies\n    // if you omit the dependancies, this callback will fire after every render\n    // otherwise, it will fire after a render IF a dependancy changes\n    useEffect(() => {\n        setRowsCleared(0);\n\n        // this function clears out complete rows\n        const sweepRows = newStage => \n            // we use the reduce method\n            newStage.reduce((acc, row) => {\n                // a row in the stage is filled if all values are greater than 0\n                // so we search the row for 0\n                // if there are no 0s, clear the cell\n                if(row.findIndex(cell => cell[0] === 0) === -1) {\n                    // also increment the number of rows we've cleared\n                    setRowsCleared(prev => prev + 1);\n                    // here we create a new, empty row\n                    // which we use unshift to add it to the top of the stage\n                    acc.unshift(new Array(newStage[0].length).fill([0, 'clear']));\n                    return acc;\n                }\n                // if the row isn't filled, just return the current row\n                acc.push(row);\n                return acc;\n        }, [])\n\n        const updateStage = prevStage => {\n            // first we clear the stage so we can rewrite new data to it\n            const newStage = prevStage.map(row =>\n                // if the cell is marked as clear, we need to clear it\n                // this is done by putting 0, the 'no tetromino' marker\n                // otherwise, just replace it with the same cell value\n                row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell))\n            );\n\n            // then we draw the tetromino\n            // player basically refers to the current falling game piece\n            // so this splices in the current falling tetrimino into the grid\n            // in the appropriate position\n            player.tetromino.forEach((row, y) => {\n                row.forEach((value, x) => {\n                    // we skip values that are 0, which are blank\n                    // values in the tetromino\n                    if(value !== 0) {\n                        newStage[y + player.pos.y][x + player.pos.x] = [\n                            value,\n                            `${player.collided ? 'merged' : 'clear'}`\n                        ]\n                    }\n                });\n            });\n\n            // do collision detection\n            // if the current falling piece collided with something, \n            // we should stop moving the current piece\n            // and bring a new one to the top of the play field\n            if (player.collided) {\n                resetPlayer();\n                // additionally, now would be the time where we would check if\n                // we need to clear rows\n                return sweepRows(newStage);\n            }\n\n            return newStage;\n        }\n\n        // call the stage setter using the above instructions\n        setStage(prev => updateStage(prev))\n    }, [player, player.collided]);\n\n    // this hook will allow us to both read and alter the stage state\n    // so return both the getter and the setter\n    return [stage, setStage, rowsCleared];\n}\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import { useState, useEffect, useCallback } from 'react';\n\nexport const useGameStatus = rowsCleared => {\n    const [score, setScore] = useState(0);\n    // this is used to track how many TOTAL rows the player has cleared\n    const [rows, setRows] = useState(0);\n    const [level, setLevel] = useState(0);\n\n    // the number of points you get for clearing lines\n    // the more lines you clear at once, the larger the reward\n    // these are the values used in the OG tetris game\n    const linePoints = [40, 100, 300, 1200];\n\n    // this will recalculate the score\n    // this function is fired whenever the level,\n    // the line points, or the number of cleared rows changes\n    // so it won't fire on every render, which is good for efficiency\n    const calcScore = useCallback(() => {\n        // check if we've actually cleared any rows\n        if (rowsCleared > 0) {\n            // we use both the rows cleared and the current level to calculate \n            // this is the formula used in OG tetris\n            setScore(prev => prev + linePoints[rowsCleared-1] * (level + 1));\n            setRows(prev => prev + rowsCleared);\n        }\n    }, [level, linePoints, rowsCleared])\n\n    // an effect that should run whenever the score changes\n    useEffect(() => {\n        calcScore();\n    }, [calcScore, rowsCleared, score]);\n\n    return [score, setScore, rows, setRows, level, setLevel];\n}","import React, { useState } from 'react';\n\n// components\nimport { createStage, checkCollision } from '../gameHelpers';\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from \"./StartButton\";\n// styling\nimport { StyledTetris, StyledTetrisWrapper } from \"./styles/StyledTetris\";\n\n// custom hooks\nimport { usePlayer } from \"../hooks/usePlayer\";\nimport { useStage } from \"../hooks/useStage\";\nimport { useInterval } from \"../hooks/useInterval\";\nimport { useGameStatus } from \"../hooks/useGameStatus\";\n\nconst Tetris = ({ type }) => {\n    // a hook used to alter speed the tetromino drops at\n    const [dropTime, setDropTime] = useState(null);\n    // a hook to get/set the gameover state\n    const [gameOver, setGameOver] = useState(false);\n\n    // get the getters/setters from our custom hooks\n    const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n    const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n    const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(\n        rowsCleared\n    );\n\n    console.log('re-rendered game');\n\n    // a callback that manages user keypresses\n    const move = ({ keyCode }) => {\n        // these controls hold during gameplay,\n        // so check if we're in game over\n        if(!gameOver) {\n            // left arrow\n            if (keyCode === 37) {\n                // move left\n                movePlayer(-1);\n            }\n            // right arrow\n            else if (keyCode === 39) {\n                // move right\n                movePlayer(1);\n            }\n            // down key\n            else if (keyCode === 40) {\n                // drop the piece\n                dropPlayer();\n            }\n            // up key\n            else if (keyCode === 38) {\n                playerRotate(stage, 1);\n            }\n        }\n    }\n\n    // update the position of the falling teromino\n    const movePlayer = dir => {\n        // only move if we aren't colliding with anything\n        if (!checkCollision(player, stage, {x: dir, y: 0})) {\n            updatePlayerPos({ x: dir, y: 0 });\n        }\n    }\n\n    const startGame = () => {\n        // reset everything\n\n        // clear the stage\n        setStage(createStage());\n        setDropTime(1000);\n        // bring a new piece to the top of the stage\n        resetPlayer();\n        // set game over to false\n        setGameOver(false);\n        // reset score\n        setScore(0);\n        setRows(0);\n        setLevel(0);\n    }\n\n    // attempt to drop the tetromino down one level\n    const drop = () => {\n        // increase level when player has cleared 10 rows\n        if (rows > (level + 1) * 10) {\n            setLevel(prev => prev + 1);\n            setDropTime(1000 / (level + 1) + 200);\n        }\n\n        // if the space below is free...\n        if(!checkCollision(player, stage, { x: 0, y: 1})) {\n            // move the piece down\n            updatePlayerPos({\n            x: 0, y: 1,\n            collided: false\n            });\n        // otherwise...\n        } else {\n            // if we have stacked pieces up to the top\n            // (that is, position 0 in the stage grid)...\n            if (player.pos.y < 1) {\n                // we are in the game over state\n                console.log(\"Game Over\");\n                setGameOver(true);\n                // we should also clear the drop time\n                setDropTime(null);\n            }\n\n            // if nothing else holds, that means this piece has\n            // been obstructed and should stop moving\n            updatePlayerPos({ x: 0, y: 0, collided: true});\n        }\n    }\n\n    // this resets the drop speed if we release the down key\n    const keyUp = ({keyCode}) => {\n        if(!gameOver) {\n            if (keyCode === 40) {\n                console.log(\"Interval On\");\n                setDropTime(1000 / (level + 1) + 200);\n            }\n        }\n    }\n\n    const dropPlayer = () => {\n        // while we manually drop pieces, we want to stop the timed drop\n        console.log(\"Interval Off\");\n        setDropTime(null);\n        drop();\n    }\n\n    // \n    useInterval(() => {\n        drop();\n    }, dropTime);\n\n    return (\n        <StyledTetrisWrapper role=\"button\" tabIndex=\"0\"\n            onKeyDown={e => move(e)}\n            onKeyUp={keyUp}\n            >\n            {/*\n                role=\"button\" is used to identify the purpose of the element\n                notably accessibility software\n                tabIndex=\"0\"\n                tab index sets the order which tabbing accesses elements\n                -1 means inaccessible through tab\n                0 is the first tabable element\n                and then any positive int is visited in order\n                (so tab item 3 comes after 0 but before 5)\n\n                Note we use the wrapper because since it is the top element,\n                it allows us to click anywhere in the screen to capture input\n                rather than a specific element\n            */}\n            <StyledTetris>\n                <Stage stage={stage}/>\n                <aside>\n                    {gameOver ? (\n                        <Display gameOver={gameOver} text=\"Game Over\" />\n                    ) : (\n                        <div>\n                            <Display text={`score: ${score}`}/>\n                            <Display text={`rows: ${rows}`} />\n                            <Display text={`level: ${level}`} />\n                        </div>\n                    )}\n                    \n                    <StartButton callback={startGame}/>\n                </aside>\n            </StyledTetris>\n        </StyledTetrisWrapper>\n    )\n}\n\nexport default Tetris;","import React from 'react';\nimport Tetris from './components/Tetris';\n\nconst App = () => (\n  <div className=\"App\">\n    <Tetris />\n  </div>\n)\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]}}